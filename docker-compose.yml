services:
  app-cpu:
    build: .
    volumes:
      - .:/app
      - model-cache:/root/.cache/torch/sentence_transformers  # Cache for sentence transformers
      - huggingface-cache:/root/.cache/huggingface  # Cache for HuggingFace models
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8000:8000"  # If we add a web interface later
    command: python -m src.rag_startups.cli generate-all --num-ideas 3 "fintech"

  app-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    volumes:
      - .:/app
      - model-cache:/root/.cache/torch/sentence_transformers  # Cache for sentence transformers
      - huggingface-cache:/root/.cache/huggingface  # Cache for HuggingFace models
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8001:8000"
    command: python -m src.rag_startups.cli generate-all --num-ideas 3 "fintech"

  # Test service for GPU code without actual GPU
  app-gpu-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    volumes:
      - .:/app
      - model-cache:/root/.cache/torch/sentence_transformers  # Cache for sentence transformers
      - huggingface-cache:/root/.cache/huggingface  # Cache for HuggingFace models
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    ports:
      - "8002:8000"
    command: python -m src.rag_startups.cli generate-all --num-ideas 3 "fintech"

volumes:
  model-cache:  # Persistent volume for sentence transformers cache
  huggingface-cache:  # Persistent volume for HuggingFace models
